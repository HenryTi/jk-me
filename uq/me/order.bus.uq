BUS JkOrderBus ver 0.7 from 百灵威系统工程部/[jk-order-1]
ACCEPT order {
	VAR mainId ID;
	SET mainId = id;
	WITH OrderMain as a ID=mainId SET a.no=no, a.customer=customer;
	FOR detail {
		WITH OrderDetail as a 
			ID = id
			SET a.main=mainId
				, a.item=item, a.product=product
				, a.quantity=quantity
                , a.price=price
				, a.amount=amount;
	}
    PROC ProcBusTest(mainId);
    VAR orderActionId ID = ID(OrderAction new, mainId, EnumOrderAction.orderAccept);
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [deliver-done] {
	FOR detail {
		WITH DxOrderDetail ID=orderDetail SET deliverDone=value;
        PROC SaveOrderAction(id, EnumOrderAction.deliverDone, orderDetail, value, Item.orderDeliver);
	}
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [receive-done] {
	FOR detail {
		WITH DxOrderDetail ID=orderDetail SET receiveDone+=value;
        PROC SaveOrderAction(id, EnumOrderAction.receiveDone, orderDetail, value, Item.orderReceive);
	}
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [return] {
	FOR detail {
		WITH DxOrderDetail ID=orderDetail SET return+=quantity;
        PROC SaveOrderAction(id, EnumOrderAction.return, orderDetail, quantity, Item.orderReturn);
	}
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [order-cost-price] {
    FOR detail {
        WITH DxOrderDetail ID=[order-detail] SET costPrice=[cost-price];
    }
    VAR readyStates ENUM ReadyStates;
    SET readyStates=a.readyStates FROM DxOrderMain as a WHERE a.id=order;
    WITH DxOrderMain as a ID=order SET a.readyStates=IFNULL(readyStates, ReadyStates.costNone) | ReadyStates.cost;
    VAR orderActionId ID = ID(OrderAction new, order, EnumOrderAction.orderCost);
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [order-bound-staff-sales] {
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectStaff, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH ObjectStaff ID=toId SET staff=id;
        }
        WITH IxOrderBoundTo IXX=order IX=Post.staffSales XI=toId;
    }
    -- WITH IxOrderBoundPost IX=order XI=Post.staffSales;
    VAR orderActionId ID = ID(OrderAction new, order, EnumOrderAction.orderBoundStaffSales);
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [order-bound-agent] { -- 轻代理
    FOR to {
		VAR toId ID;
		SET toId=ID(ObjectAgent, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH ObjectAgent ID=toId SET agent=id;
        }
        WITH IxOrderBoundTo IXX=order IX=Post.agent XI=toId;
    }
    -- WITH IxOrderBoundPost IX=order XI=Post.agent;
    VAR orderActionId ID = ID(OrderAction new, order, EnumOrderAction.orderBoundAgent);
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [order-bound-distributor] { -- 分销商
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectDistributor, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH ObjectDistributor ID=toId SET distributor=id;
        }
        WITH IxOrderBoundTo IXX=order IX=Post.distributor XI=toId;
    }
    -- WITH IxOrderBoundPost IX=order XI=Post.distributor;
    VAR orderActionId ID = ID(OrderAction new, order, EnumOrderAction.orderBoundDistributor);
    SCHEDULE ActOrderAction DELAY 1;
}
ACCEPT [order-bound-customer] {
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectCustomer, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH ObjectCustomer ID=toId SET customer=id;
        }
        WITH IxOrderBoundTo IXX=order IX=Post.customer XI=toId;
    }
    -- WITH IxOrderBoundPost IX=order XI=Post.customer;
    VAR orderActionId ID = ID(OrderAction new, order, EnumOrderAction.orderBoundCustomer);
    SCHEDULE ActOrderAction DELAY 1;
}
;

PROC SaveOrderAction(
    detailId ID,
    action ENUM EnumOrderAction,
    orderDetail ID,
    value DEC(18,4),
    item ENUM Item,
) {
    VAR orderActionId ID = ID(OrderAction new, detailId, action);
    WITH OrderAction as a ID=orderActionId
        SET a.orderDetail=orderDetail, a.value=value, a.item=item;
};
