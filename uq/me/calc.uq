-- 定期计算，每小时计算一次。把新的业务添加到日业务表
ACT CalcDaySum ver 0.1 ()
{
    TRANSACTION OFF;                     -- 去掉每一个ACT开始的Start Transaction和结尾的Commit
    VAR timeZone TINYINT = unittimezone();
    VAR itemHistoryId ID;
    SETTING 'dayItemHistoryId' BIGINT TO itemHistoryId;
    IF itemHistoryId IS NULL {
        SET itemHistoryId=0;
    }

    WHILE 1=1 {
        VAR value DEC(18,4), historyId ID, date DATE, item ENUM Item;
        SET historyId=NULL;
        SET historyId=a.id
            , value=a.value
            , item=a.item
            FROM ItemHistory as a
            WHERE a.id>itemHistoryId
            ORDER BY a.id ASC
            LIMIT 1;
        IF historyId IS NULL { BREAK; }

        SET itemHistoryId=historyId;
        SET date=MinuteIdDate(historyId, timeZone);
        TRANSACTION Start;
        WITH DaySumItem as a IX=item XI=date SET a.value=IFNULL(a.value,0) + IFNULL(value,0);
        SETTING 'dayItemHistoryId' BIGINT = itemHistoryId;
        TRANSACTION Commit;
    }
};

-- 定期计算，每小时计算一次。把新的销售添加到月销量表
ACT CalcMonthSum ver 0.3 (
) {
    TRANSACTION OFF;                     -- 去掉每一个ACT开始的Start Transaction和结尾的Commit
    VAR timeZone TINYINT = unittimezone();
    VAR itemHistoryId ID;
    SETTING 'itemHistoryId' BIGINT TO itemHistoryId;
    IF itemHistoryId IS NULL {
        SET itemHistoryId=0;
    }
    WHILE 1=1 {
        VAR product ID, customerAccount ID, value DEC(18,4)
            , biz ID
            , bizOp ID
            , historyId ID, date DATE, m INT, item ENUM Item;
        SET historyId=NULL;
        SET historyId=a.id
            , biz=b.biz
            , bizOp=a.bizOp
            , value=a.value
            , item=a.item
            FROM ItemHistory as a JOIN DxBizOp as b ON b.id=a.bizOp
            WHERE a.id>itemHistoryId
            ORDER BY a.id ASC
            LIMIT 1;
        IF historyId IS NULL { BREAK; }
        SET itemHistoryId=historyId;
        SET date=MinuteIdMonth(historyId, timeZone);
        SET m=YEAR(date)*100+MONTH(date);

        TRANSACTION Start;
        IF item=Item.orderAmount {
            SET customerAccount=c.customerAccount
                , product=b.product
                FROM OrderDetail as b
                    JOIN OrderMain as c ON b.main=c.id
                WHERE b.id=biz;

            -- product
            WITH MonthSumProduct as a IXX=item IX=m XI=product SET a.value=a.value + value;
            -- customerAccount
            WITH MonthSumCustomer as a IXX=item IX=m XI=customerAccount SET a.value=a.value + value;
        }
        ELSEIF item=Item.orderReturn {
            SET customerAccount=c.customerAccount
                , product=b.product
                FROM OrderDetail as b
                    JOIN OrderMain as c ON b.main=c.id
                WHERE b.id=biz;

            -- product
            WITH MonthSumProduct as a IXX=item IX=m XI=product SET a.value=a.value + value;
            -- customerAccount
            WITH MonthSumCustomer as a IXX=item IX=m XI=customerAccount SET a.value=a.value + value;
        }

        SETTING 'itemHistoryId' BIGINT = itemHistoryId;
        TRANSACTION Commit;
    }
};

/*
PROC ResetCalcAccount(
    date DATE
) {
    VAR timeZone TINYINT = unittimezone();
    VAR minuteId ID;
    SET minuteId=minuteIdFromDate(date, timeZone) - 1;
    TRANSACTION OFF;
    TRANSACTION Start;
    DELETE 
    SETTING 'accountOpiHistoryId' BIGINT = minuteId;
    TRANSACTION Commit;
};
*/
// calc account from OpiHistory
ACT CalcAccount ver 0.1 ()
{
    TRANSACTION OFF;                     -- 去掉每一个ACT开始的Start Transaction和结尾的Commit
    VAR timeZone TINYINT = unittimezone();
    VAR opiHistoryId ID;
    VAR objectAccountId ID;
    VAR dateHourId ID;
    VAR accountValue DEC(18,4);
    SETTING 'accountOpiHistoryId' BIGINT TO opiHistoryId;
    IF opiHistoryId IS NULL {
        SET opiHistoryId=0;
    }

    WHILE 1=1 {
        VAR value DEC(18,4), historyId ID, date DATE, object ID, item ENUM Item, opi ID;
        SET historyId=NULL;
        SET historyId=a.id
            , value=a.value
            , object=b.object
            , item=b.item
            , opi=a.opi
            FROM OpiHistory as a
                JOIN ObjectPostItem as b ON b.id=a.opi
            WHERE a.id>opiHistoryId
            ORDER BY a.id ASC
            LIMIT 1;
        IF historyId IS NULL { BREAK; }

        SET opiHistoryId=historyId;
        SET dateHourId=(((historyId>>20) DIV (24*60)) * 24) + timeZone;
        TRANSACTION Start;
        FOR (VAR account ENUM EnumAccount, radio DEC(6,2)
            OF SELECT a.xi as account, a.radio
                FROM AccountBooking as a WHERE a.ix=item)
        {
            SET accountValue=(IFNULL(radio, 0)*value/100);
            SET objectAccountId=ID(
                ObjectAccount new
                KEY object=object, account=account);
            WITH ObjectAccount as a ID=objectAccountId 
                SET a.balance=IFNULL(a.balance, 0)+accountValue;
            WITH ObjectAccountHistory as a IX=objectAccountId XI=dateHourId
                SET a.value=IFNULL(a.value,0)+accountValue, a.opi=opi;
        }
        SETTING 'accountOpiHistoryId' BIGINT = opiHistoryId;
        TRANSACTION Commit;
    }
};
